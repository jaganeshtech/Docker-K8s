# To get Dashboard as Service

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
kubectl proxy

In the Master VM - Firefox browser
http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/

In the terminal:
Token:
kubectl -n kube-system get secret |grep  kubernetes-dashboard-token |cut -f1 -d ' ' |  xargs kubectl -n kube-system describe  secret




# Quotas Example by Service..

apiVersion: v1
kind: ResourceQuota
metadata:
  name: object-quota-demo
spec:
  hard:
    persistentvolumeclaims: "1"
    services.loadbalancers: "0"
    services.nodeports: "1"

kubectl get quota
kubectl describe quota object-quota-demo

kubectl run nginx-mp --image=nginx --port=80
kubectl expose deployment nginx-mp --type=NodePort
kubectl describe quota object-quota-demo

kubectl run nginx-mp-new --image=nginx --port=80
kubectl expose deployment nginx-mp-new --type=NodePort

kubectl delete quota object-quota-demo

# Quota by Count

quota2.yml
---------
apiVersion: v1
kind: ResourceQuota
metadata:
  name: pod-demo
spec:
  hard:
    pods: "2"

kubectl create -f quota2.yml
kubectl get quota
kubectl get resourcequota pod-demo --output=yaml
kubectl run nginx-mp --image=nginx --port=80 --replicas=3
kubectl get deployment 
kubectl get deployment pod-quota-demo --output=yaml

# Persistent Volume

minikube ssh..
Inside the machine : /mnt/app - Folder storage
cat > index.html


pv.yml
------
apiVersion: v1
kind: PersistentVolume
metadata:
  name: task-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/app"

kubectl create -f pv.yml
kubectl get pv


#Persistent Volume Claim

pvc.yml
----------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: task-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi

kubectl create -f pvc.yml
kubectl get pvc

podclaim.yml
-------------
apiVersion: v1
kind: Pod
metadata:
  name: task-pv-pod
spec:
  volumes:
    - name: task-pv-storage
      persistentVolumeClaim:
        claimName: task-pv-claim
  containers:
    - name: task-pv-container
      image: nginx
      ports:
        - containerPort: 80
          name: "http-server"
      volumeMounts:
        - mountPath: "/usr/share/nginx/html"
          name: task-pv-storage

kubectl create -f podclaim.yml
kubectl exec -it task-pv-storage bash
# apt-get -y update
# apt-get -y install curl
# curl localhost




